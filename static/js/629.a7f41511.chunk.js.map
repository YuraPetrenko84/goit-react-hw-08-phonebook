{"version":3,"file":"static/js/629.a7f41511.chunk.js","mappings":"uKACA,MAA4B,0B,UCCfA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,mBAAQC,UAAWC,EAAeC,KAAK,SAAvC,SACGH,GAGN,C,kFCPD,EAA2B,4BAA3B,EAA8D,wBAA9D,EAA8F,yBAA9F,EAA4K,yBAA5K,EAAoN,gC,oECQvMI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,KAE9BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACV,GAAE,CAACR,IAeJ,OACE,iBAAKJ,UAAWC,EAAhB,WACE,mCACA,kBACED,UAAWC,EACXY,SAlBe,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cAEnBb,GACEc,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAQKC,KAAK,aACLC,aAAa,MAJf,WAME,mBAAOzB,UAAWC,EAAlB,mBAGE,kBACED,UAAWC,EACXC,KAAK,QACLsB,KAAK,QACLE,UAAQ,EACRC,WAAS,EACTC,YAAY,IACZC,QAAQ,4CACRC,MAAM,+BAGV,mBAAO9B,UAAWC,EAAlB,sBAME,kBACED,UAAWC,EACXC,KAAK,WACLsB,KAAK,WACLE,UAAQ,EACRK,UAAU,IACVC,UAAU,KACVJ,YAAY,SAKftB,IACC,cAAGN,UAAWC,EAAd,oDAIF,SAACH,EAAA,EAAD,uBAEDW,IAAcH,IAAS,SAAC,IAAD,CAAW2B,MAAM,UAAUC,MAAM,WAG9D,ECxED,EARc,WACZ,OACE,8BACE,SAAC/B,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/LogInForm/LogInForm.module.css?b51d","components/LogInForm/LogInForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submitBtn\":\"Button_submitBtn__Xtf41\"};","import css from './Button.module.css';\n\nexport const Button = ({ children }) => {\n  return (\n    <button className={css.submitBtn} type=\"submit\">\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formCard\":\"LogInForm_formCard__Yv9p0\",\"form\":\"LogInForm_form__PteRy\",\"label\":\"LogInForm_label__NUlYv\",\"description\":\"LogInForm_description__CMc9I\",\"input\":\"LogInForm_input__MWW6w\",\"errorMessage\":\"LogInForm_errorMessage__16em+\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './LogInForm.module.css';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { Button } from 'components/Button/Button';\nimport { selectIsLoading, selectError } from 'redux/auth/auth-selectors';\nimport BarLoader from 'react-spinners/BarLoader';\nimport { useEffect } from 'react';\nimport { reLogIn } from 'redux/auth/auth-operations';\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(reLogIn());\n  }, [dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.formCard}>\n      <h2>Login</h2>\n      <form\n        className={css.form}\n        onSubmit={handleSubmit}\n        name=\"login_form\"\n        autoComplete=\"off\"\n      >\n        <label className={css.label}>\n          Email\n          {/* <p className={css.description}>Enter E-mail address</p> */}\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            required\n            autoFocus\n            placeholder=\" \"\n            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            title=\"Example: wick@mail.com\"\n          ></input>\n        </label>\n        <label className={css.label}>\n          Password\n          {/* <p className={css.description}>\n            Must have at least 7 characters (1 character uppercase , 1 lowercase\n            and 1 number)\n          </p> */}\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            minLength=\"7\"\n            maxLength=\"12\"\n            placeholder=\" \"\n            // pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\n            // title=\"Example: Xn2isL0\"\n          ></input>\n        </label>\n        {error && (\n          <p className={css.errorMessage}>\n            Email or Password entered incorrectly\n          </p>\n        )}\n        <Button>LogIn</Button>\n      </form>\n      {isLoading && !error && <BarLoader color=\"#5ac846\" width=\"100%\" />}\n    </div>\n  );\n};\n","import { LogInForm } from 'components/LogInForm/LogInForm';\n\nconst Login = () => {\n  return (\n    <section>\n      <LogInForm />\n    </section>\n  );\n};\n\nexport default Login;\n"],"names":["Button","children","className","css","type","LogInForm","dispatch","useDispatch","error","useSelector","selectError","isLoading","selectIsLoading","useEffect","reLogIn","onSubmit","event","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","name","autoComplete","required","autoFocus","placeholder","pattern","title","minLength","maxLength","color","width"],"sourceRoot":""}